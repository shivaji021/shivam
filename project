npm install express
Create your project structure:

markdown
Copy code
- project-directory
  |- public
    |- index.html
    |- login.html
  |- server.js
  |- messages.json
Code for server.js:

javascript
Copy code
const express = require('express');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = 3000;

app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));

app.get('/', (req, res) => {
  // Serve the main page
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.get('/login', (req, res) => {
  // Serve the login page
  res.sendFile(path.join(__dirname, 'public', 'login.html'));
});

app.post('/login', (req, res) => {
  const username = req.body.username;

  // Store username in local storage
  res.cookie('username', username);

  // Redirect to the main page
  res.redirect('/');
});

app.post('/send-message', (req, res) => {
  const username = req.cookies.username;
  const message = req.body.message;

  if (username && message) {
    // Read existing messages from the file
    let messages = [];
    try {
      const messagesData = fs.readFileSync('messages.json', 'utf8');
      messages = JSON.parse(messagesData);
    } catch (error) {
      console.error('Error reading messages file:', error.message);
    }

    // Add new message
    messages.push({ username, message });

    // Write updated messages back to the file
    fs.writeFileSync('messages.json', JSON.stringify(messages, null, 2), 'utf8');

    // Send a response
    res.send('Message sent successfully!');
  } else {
    res.status(400).send('Invalid request. Please provide a username and message.');
  }
});

app.get('/get-messages', (req, res) => {
  // Read messages from the file
  let messages = [];
  try {
    const messagesData = fs.readFileSync('messages.json', 'utf8');
    messages = JSON.parse(messagesData);
  } catch (error) {
    console.error('Error reading messages file:', error.message);
  }

  // Send messages as JSON response
  res.json(messages);
});

app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
Code for public/login.html:

html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login</title>
</head>
<body>
  <form action="/login" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>
    <button type="submit">Login</button>
  </form>
</body>
</html>
Code for public/index.html:

html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat</title>
</head>
<body>
  <h1>Welcome to the Chat</h1>
  <form action="/send-message" method="post">
    <label for="message">Message:</label>
    <input type="text" id="message" name="message" required>
    <button type="submit">Send</button>
  </form>
  <div id="messages"></div>
  <script>
    // Fetch and display messages using JavaScript
    async function fetchMessages() {
      const response = await fetch('/get-messages');
      const messages = await response.json();
      const messagesDiv = document.getElementById('messages');

      messagesDiv.innerHTML = '';
      messages.forEach(message => {
        const messageDiv = document.createElement('div');
        messageDiv.textContent = `${message.username}: ${message.message}`;
        messagesDiv.appendChild(messageDiv);
      });
    }

    // Fetch messages on page load
    fetchMessages();

    // Fetch messages every 5 seconds (for demonstration purposes)
    setInterval(fetchMessages, 5000);
  </script>
</body>
</html>
Run your server:

bash
Copy code
node server.js
